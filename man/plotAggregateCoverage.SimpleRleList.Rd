% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GRanges.R
\name{plotAggregateCoverage.SimpleRleList}
\alias{plotAggregateCoverage.SimpleRleList}
\title{A function to plot aggregated signals over sets of GRanges}
\usage{
\method{plotAggregateCoverage}{SimpleRleList}(
  x,
  granges,
  colors = NULL,
  xlab = "Center of elements",
  ylab = "Score",
  xlim = NULL,
  ylim = NULL,
  quartiles = c(0.025, 0.975),
  verbose = FALSE,
  bin = 1,
  plot_central = TRUE,
  run_in_parallel = TRUE,
  split_by_granges = FALSE,
  norm = "none",
  ...
)
}
\arguments{
\item{x}{a single signal track (SimpleRleList class)}

\item{granges}{a GRanges object or a list of GRanges}

\item{colors}{a vector of colors}

\item{xlab}{x axis label}

\item{ylab}{y axis label}

\item{xlim}{y axis limits}

\item{ylim}{y axis limits}

\item{quartiles}{Which quantiles to use to determine y scale automatically?}

\item{verbose}{Boolean}

\item{bin}{Integer Width of the window to use to smooth values 
by zoo::rollMean}

\item{plot_central}{Boolean Draw a vertical line at 0}

\item{run_in_parallel}{Boolean Should the plots be computed in parallel using 
mclapply?}

\item{split_by_granges}{Boolean Facet plots over the sets of GRanges}

\item{norm}{character Should the signal be normalized 
('none', 'zscore' or 'log2')?}

\item{...}{additional parameters}
}
\value{
A plot of aggregated signals
}
\description{
This function takes one or several RleList genomic tracks (imported
by rtraklayer::import(..., as = 'Rle')) and one or several GRanges 
objects. It computes coverage of the GRanges by the genomic tracks
and returns an aggregate coverage plot.
}
\examples{
data(ce11_ATACseq)
data(ce11_proms)
class(ce11_ATACseq)
p1 <- plotAggregateCoverage(
    ce11_ATACseq, 
    resize(ce11_proms[1:100], fix = 'center', width = 1000)
)
p1
proms <- resize(ce11_proms[1:100], fix = 'center', width = 500)
p2 <- plotAggregateCoverage(
    ce11_ATACseq, 
    list(
        'Ubiq & Germline promoters' = 
            proms[proms$which.tissues \%in\% c('Ubiq.', 'Germline')],
        'Other promoters' = 
            proms[!(proms$which.tissues \%in\% c('Ubiq.', 'Germline'))]
    )
)
p2
}
